# -*- makefile-gmake -*-

SRC_DIRS := zero apps

LLIB := $(BUILD_DIR)/libg0moments.a
SRCS := $(shell find $(SRC_DIRS) -name *.c)
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)
UNITS := $(patsubst %.c,${BUILD_DIR}/%,$(wildcard unit/ctest_*.c))
MPI_UNITS := $(patsubst %.c,${BUILD_DIR}/%,$(wildcard unit/mctest_*.c))
LUA_UNITS := $(patsubst %.c,${BUILD_DIR}/%,$(wildcard unit/lctest_*.c))

KERN_INC_DIRS = 
KERN_INCLUDES = 
EXT_INCS := -I${MPI_INC_DIR} -I${LUA_INC_DIR} -I${LAPACK_INC}
CORE_INCS := -I../core/apps -I../core/zero -I../core/minus -I../core/minus/STC/include -I../zero
INCS := ${EXT_INCS} ${CORE_INCS} -Izero -Iapps $(KERN_INCLUDES)

EXEC_LIB_DIRS = -L${MPI_LIB_DIR} -L${LUA_LIB_DIR}
EXEC_EXT_LIBS = ${MPI_RPATH} ${MPI_LIBS} ${LUA_RPATH} ${LUA_LIBS} -lm -lpthread -ldl
EXEC_LIBS = -Lbuild ${LLIB} ${EXEC_EXT_LIBS}

unit: $(LLIB) $(UNITS) ${MPI_UNITS} ## Build unit tests

.PHONY: all
all: $(LLIB) ## Build all targets
.DEFAULT_GOAL := all

# c -> o files
$(BUILD_DIR)/%.c.o: %.c
	$(MKDIR_P) $(dir $@)
	$(CC) -c $(CFLAGS) $(INCS) $< -o $@

# Unit tests
$(UNITS): ${BUILD_DIR}/unit/%: unit/%.c $(LLIB)
	$(MKDIR_P) ${BUILD_DIR}/unit
	${CC} ${CFLAGS} ${LDFLAGS} -o $@ $< -I. $(INCS) ${EXEC_LIB_DIRS} ${EXEC_LIBS}

# MPI unit tests
$(MPI_UNITS): ${BUILD_DIR}/unit/%: unit/%.c $(LLIB)
	$(MKDIR_P) ${BUILD_DIR}/unit
	${CC} ${CFLAGS} ${LDFLAGS} -o $@ $< -I. $(INCS) ${EXEC_LIB_DIRS} ${EXEC_LIBS}

# build lib
$(LLIB): $(OBJS)
	$(MKDIR_P) $(dir $@)
	ar -crs $@ $(OBJS)

.PHONY: check valcheck
# Run all unit tests
check: ${UNITS} ## Build (if needed) and run all unit tests
	$(foreach unit,${UNITS},echo $(unit); $(unit) -E;)

valcheck: ${UNITS}   ## Run valgrind on unit test
	$(foreach unit,$(UNITS),valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --show-error-list=yes $(unit) --exec=never 2>$(unit)_val_err 1>/dev/null;)
	$(foreach unit,$(UNITS),./minus/checkval.sh $(unit);)

-include $(DEPS)

# Headers to install
INSTALL_HEADERS := $(shell ls apps/gkyl_*.h zero/gkyl_*.h  | grep -v "priv" | sort)

.PHONY: install
install: all
# Construct install 
	$(MKDIR_P) ${INSTALL_PREFIX}/${PROJ_NAME}/include
	${MKDIR_P} ${INSTALL_PREFIX}/${PROJ_NAME}/lib
	${MKDIR_P} ${INSTALL_PREFIX}/${PROJ_NAME}/bin
	${MKDIR_P} ${INSTALL_PREFIX}/${PROJ_NAME}/share
# Headers
	cp ${INSTALL_HEADERS} ${INSTALL_PREFIX}/${PROJ_NAME}/include
# libraries
	cp -f $(LLIB) ${INSTALL_PREFIX}/${PROJ_NAME}/lib/libg0moments.a

.PHONY: clean
clean: ## Clean build output
	rm -rf ${BUILD_DIR}
